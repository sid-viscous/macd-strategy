// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© sid-viscous

//@version=5
strategy("Sid's Magic MACD Spot Trading Strategy", overlay=false)

///// Inputs /////

// Backtest range //
useStartPeriodTime = input.bool(false, "Start", group = "Backtest date range", inline = "Start period")
backtestStart = input.time(timestamp("1 Aug 2021 00:00 +0300"), "", group="Backtest date range", inline="Start period")
useEndPeriodTime = input.bool(false, "End", group = "Backtest date range", inline = "End period")
backtestEnd = input.time(timestamp("14 Aug 2021 00:00 +0300"), "", group = "Backtest date range", inline="End period")

// MACD //
macdFastLen = input.int(13, "Fast length", group = "MACD")
macdSlowLen = input.int(37, "Slow length", group = "MACD")
macdSignalLen = input.int(11, "Signal length", group = "MACD")

// Filters //
useMacdAngleFilterBuy = input.bool(false, "Buy only on steep MACD crosses", group = "MACD filters")
macdAngleFilterBuy = input.float(0.0, "Buy MACD angle", group = "MACD filters")

useMacdAngleFilterSell = input.bool(false, "Sell only on steep MACD crosses", group = "MACD filters")
macdAngleFilterSell = input.float(0.0, "Sell MACD angle", group = "MACD filters")

useRsiCutoffFilter = input.bool(true, "Buy only when RSI below cutoff", group = "RSI filter")
rsiFilterLen = input.int(14, "RSI length", group = "RSI filter")
rsiFilterCutoff = input.float(61.0, "Cutoff", group = "RSI filter")

useEmaUptrendFilter = input.bool(true, "Buy only on EMA uptrend", group = "EMA filter")
emaFilterLen = input.int(36, "EMA length", group = "EMA filter")
emaFilterUptrendLen = input.int(2, "EMA uptrend length", group = "EMA filter")

useAtrCutoffFilter = input.bool(true, "Buy only when ATR is above cutoff", group = "ATR filter")
atrFilterLen = input.int(14, "ATR length", group = "ATR filter")
atrFilterCutoff = input.float(0.4, "Cutoff", group = "ATR filter", tooltip = "Percent of current price (%)")

// Stops //
useStopLoss = input.bool(true, "Use stop loss", group = "Stops", inline = "Stop loss")
stopLossPercent = input.float(1.0, "", group = "Stops", inline = "Stop loss", tooltip = "Percent (%)")

useTakeProfit = input.bool(true, "Use take profit", group = "Stops", inline = "Take profit")
takeProfitPercent = input.float(6, "", group = "Stops", inline = "Take profit", tooltip = "Percent (%)")


///// Strategy /////

// MACD crossover (main driving indicator for the strategy)
[macdLine, signalLine, histLine] = ta.macd(close, macdFastLen, macdSlowLen, macdSignalLen)

macdBuySignal = ta.crossover(macdLine, signalLine) and macdLine < 0 and signalLine < 0
macdSellSignal = ta.crossunder(macdLine, signalLine) and macdLine > 0 and signalLine > 0

// Filter: Date range //
startCondition = (useStartPeriodTime and time > backtestStart) or not useStartPeriodTime
endCondition = (useEndPeriodTime and time < backtestEnd) or not useEndPeriodTime
dateCondition = startCondition and endCondition


// Filter: MACD crossover angle //
d_macd = macdLine[0] - macdLine[2]
d_signal = signalLine[0] - macdLine[2]
macdCrossAngle = math.abs(d_macd-d_signal)

macdCrossBuyFilter = (useMacdAngleFilterBuy and macdCrossAngle >= macdAngleFilterBuy) or not useMacdAngleFilterBuy
macdCrossSellFilter = (useMacdAngleFilterSell and macdCrossAngle >= macdAngleFilterSell) or not useMacdAngleFilterSell


// Filter: RSI cutoff //
rsiCutoffCondition = ta.rsi(close, rsiFilterLen) <= rsiFilterCutoff
rsiCutoffFilter = (useRsiCutoffFilter and rsiCutoffCondition) or not useRsiCutoffFilter


// Filter: EMA uptrend //
emaLine = ta.ema(close, emaFilterLen)
emaUptrendCondition = emaLine[0] > emaLine[emaFilterUptrendLen]
emaUptrendFilter = (useEmaUptrendFilter and emaUptrendCondition) or not useEmaUptrendFilter


// Filter: ATR filter //
atr = ta.atr(atrFilterLen)
atrCutoffCondition = 100*atr/close > atrFilterCutoff
atrCutoffFilter = (useAtrCutoffFilter and atrCutoffCondition) or not useAtrCutoffFilter


///// Plots /////
plot(macdLine, color=color.yellow)
plot(signalLine, color=color.orange)
plot(histLine, color=color.red, style=plot.style_histogram)

// Filtered MACD crosses //
if macdBuySignal and macdCrossBuyFilter and strategy.position_size <= 0
    label.new(bar_index, macdLine, text="MACD cross up", style=label.style_cross, color=color.green, size=size.small)
    
if macdSellSignal and macdCrossSellFilter and strategy.position_size > 0
    label.new(bar_index, macdLine, text="MACD cross down", style=label.style_cross, color=color.red, size=size.small)
    
// RSI overbought background //
bgcolor(rsiCutoffFilter ? color.new(color.white,100) : color.new(color.blue, 40))

// EMA uptrend background //
bgcolor(emaUptrendFilter ? color.new(color.green,50) : color.new(color.red, 70))

// ATR background //
bgcolor(atrCutoffFilter ? color.new(color.white, 100): color.new(color.purple, 60))


// Exit prices
stopLossTicks = close*stopLossPercent/100
takeProfitTicks = close*takeProfitPercent/100
stopLossPrice = close - stopLossTicks
takeProfitPrice = close + takeProfitTicks

///// Place orders /////

// Conditions //

buyCondition = dateCondition and macdBuySignal and macdCrossBuyFilter and rsiCutoffFilter and emaUptrendFilter and atrCutoffFilter

sellCondition = strategy.position_size > 0 and macdSellSignal and macdCrossSellFilter

// Entry / exit //
//buyMessage = "Buy \n Take profit " + str.tostring(takeProfitPrice) + "\nStop loss " + str.tostring(stopLossPrice)
buyMessage = "Buy"

strategy.entry(buyMessage, strategy.long, when = buyCondition)
strategy.close(buyMessage, when = sellCondition)



// Stops //
if useStopLoss
    strategy.exit("exit", buyMessage, stop = stopLossPrice)
if useTakeProfit
    strategy.exit("exit", buyMessage, limit = takeProfitPrice)
